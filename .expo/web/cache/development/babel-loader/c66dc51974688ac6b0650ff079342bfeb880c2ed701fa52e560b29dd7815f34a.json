{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MAX_FILE_SIZE = 5 * 1024 * 1024;\nvar selectImage = function selectImage() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    images = _useState2[0],\n    setImages = _useState2[1];\n  var handleImagePick = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var _yield$ImagePicker$re = yield ImagePicker.requestMediaLibraryPermissionsAsync(),\n        status = _yield$ImagePicker$re.status;\n      if (status !== \"granted\") {\n        alert(\"Sorry, we need camera roll permissions to make this work!\");\n        return;\n      }\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1,\n        multiple: true\n      });\n      console.log(\"Image Picker Result:\", result);\n      console.log(\"Image Assets:\", result.assets);\n      if (!result.cancelled) {\n        setImages(result.assets.map(function (asset) {\n          return asset.uri;\n        }));\n      } else {\n        console.log(\"Image selection canceled\");\n      }\n      if (!result.cancelled && result.assets[0].fileSize > MAX_FILE_SIZE) {\n        alert(\"File size is too large. Please select a smaller file.\");\n        return;\n      }\n    });\n    return function handleImagePick() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [images.map(function (uri, index) {\n      return _jsx(Image, {\n        source: {\n          uri: uri\n        },\n        style: styles.imagePreview\n      }, uri);\n    }), _jsxs(TouchableOpacity, {\n      style: [styles.imagePickerButton, {\n        backgroundColor: \"#DABFBF\"\n      }],\n      onPress: handleImagePick,\n      children: [_jsx(Ionicons, {\n        name: \"add-circle\",\n        size: 24,\n        color: \"black\"\n      }), _jsx(Text, {\n        style: styles.imagePickerText,\n        children: \"ADD IMAGE\"\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  buttonContainer: {\n    backgroundColor: \"black\",\n    padding: 10,\n    width: 250,\n    marginBottom: 20\n  },\n  buttonText: {\n    fontWeight: \"bold\",\n    color: \"white\",\n    textAlign: \"center\"\n  },\n  imageArea: {\n    width: 200,\n    height: 200,\n    resizeMode: \"cover\"\n  }\n});\nexport default selectImage;","map":{"version":3,"names":["React","useState","StyleSheet","Text","TouchableOpacity","View","Image","ImagePicker","Ionicons","jsx","_jsx","jsxs","_jsxs","MAX_FILE_SIZE","selectImage","_useState","_useState2","_slicedToArray","images","setImages","handleImagePick","_ref","_asyncToGenerator","_yield$ImagePicker$re","requestMediaLibraryPermissionsAsync","status","alert","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","multiple","console","log","assets","cancelled","map","asset","uri","fileSize","apply","arguments","style","styles","container","children","index","source","imagePreview","imagePickerButton","backgroundColor","onPress","name","size","color","imagePickerText","create","flex","justifyContent","alignItems","buttonContainer","padding","width","marginBottom","buttonText","fontWeight","textAlign","imageArea","height","resizeMode"],"sources":["G:/Tehreem/Documents/Flex-Share/Flex-Share/client/src/Component/imagePicker.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, Text, TouchableOpacity, View, Image } from \"react-native\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n\r\nconst MAX_FILE_SIZE = 5 * 1024 * 1024; // 5 MB (in bytes)\r\nconst selectImage = () => {\r\n  const [images, setImages] = useState([]);\r\n  //   const(images, setImages) = useState(null);\r\n\r\n  //   const pickImageAsync = async () => {\r\n  //     let result = await ImagePicker.launchImageLibraryAsync({\r\n  //       allowsEditing: true,\r\n  //       quality: 1,\r\n  //     });\r\n\r\n  //     if (!result.cancelled) {\r\n  //       setImage(result.uri);\r\n  //     } else {\r\n  //       alert(\"You did not select any image.\");\r\n  //     }\r\n  //   };\r\n  const handleImagePick = async () => {\r\n    const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n\r\n    if (status !== \"granted\") {\r\n      alert(\"Sorry, we need camera roll permissions to make this work!\");\r\n      return;\r\n    }\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n      multiple: true, // Enable multiple image selection\r\n    });\r\n\r\n    console.log(\"Image Picker Result:\", result);\r\n    console.log(\"Image Assets:\", result.assets);\r\n\r\n    if (!result.cancelled) {\r\n      // Update the images state variable with selected image URIs\r\n      setImages(result.assets.map((asset) => asset.uri));\r\n    } else {\r\n      // Handle the case when the user cancels image selection\r\n      console.log(\"Image selection canceled\");\r\n    }\r\n\r\n    if (!result.cancelled && result.assets[0].fileSize > MAX_FILE_SIZE) {\r\n      alert(\"File size is too large. Please select a smaller file.\");\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {images.map((uri, index) => (\r\n        <Image key={uri} source={{ uri }} style={styles.imagePreview} />\r\n      ))}\r\n      <TouchableOpacity\r\n        style={[styles.imagePickerButton, { backgroundColor: \"#DABFBF\" }]}\r\n        onPress={handleImagePick}\r\n      >\r\n        <Ionicons name=\"add-circle\" size={24} color=\"black\" />\r\n        <Text style={styles.imagePickerText}>ADD IMAGE</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  buttonContainer: {\r\n    backgroundColor: \"black\",\r\n    padding: 10,\r\n    width: 250,\r\n    marginBottom: 20,\r\n  },\r\n  buttonText: {\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n  },\r\n  imageArea: {\r\n    width: 200, // Set the width to an appropriate value\r\n    height: 200, // Set the height to an appropriate value\r\n    resizeMode: \"cover\", // Adjust the resizeMode property as needed\r\n  },\r\n});\r\n\r\nexport default selectImage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}