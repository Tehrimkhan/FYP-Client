{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar PostDetailScreen = function PostDetailScreen(_ref) {\n  var _post$postedBy;\n  var route = _ref.route;\n  var post = route.params.post;\n  return _jsx(View, {\n    children: _jsxs(View, {\n      style: styles.innerContainer,\n      children: [_jsx(ScrollView, {\n        horizontal: true,\n        children: post == null ? void 0 : post.postImages.map(function (image, index) {\n          return _jsx(Image, {\n            source: {\n              uri: image.url\n            },\n            style: {\n              width: 400,\n              height: 200\n            },\n            resizeMode: \"cover\"\n          }, index);\n        })\n      }), _jsxs(Text, {\n        children: [\"Title: \", post.title]\n      }), _jsxs(Text, {\n        children: [\"Model: \", post.model]\n      }), _jsxs(Text, {\n        children: [\"Make: \", post == null ? void 0 : post.make]\n      }), _jsxs(Text, {\n        children: [\"Variant: \", post == null ? void 0 : post.variant]\n      }), _jsxs(Text, {\n        children: [\"Description: \", post == null ? void 0 : post.description]\n      }), _jsxs(Text, {\n        children: [\"PostedBy: \", post == null ? void 0 : (_post$postedBy = post.postedBy) == null ? void 0 : _post$postedBy.name]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  innerContainer: {\n    height: height * 0.4,\n    width: width,\n    backgroundColor: \"#D9D9D9\",\n    borderRadius: 25,\n    marginBottom: 20,\n    marginTop: 10\n  }\n});\nexport default PostDetailScreen;","map":{"version":3,"names":["React","View","Text","Image","StyleSheet","ScrollView","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","Dimensions","get","width","height","PostDetailScreen","_ref","_post$postedBy","route","post","params","children","style","styles","innerContainer","horizontal","postImages","map","image","index","source","uri","url","resizeMode","title","model","make","variant","description","postedBy","name","create","backgroundColor","borderRadius","marginBottom","marginTop"],"sources":["G:/Tehreem/FinalYearProject/Flex-Share-FYP/Flex-Share/client/src/Component/Banner/PostDetailScreen.js"],"sourcesContent":["import React from \"react\";\r\nimport { View, Text, Image, StyleSheet, ScrollView } from \"react-native\";\r\nconst { width, height } = Dimensions.get(\"window\");\r\nconst PostDetailScreen = ({ route }) => {\r\n  const { post } = route.params;\r\n\r\n  return (\r\n    <View>\r\n      {/* Display post images */}\r\n      <View style={styles.innerContainer}>\r\n        <ScrollView horizontal>\r\n          {post?.postImages.map((image, index) => (\r\n            <Image\r\n              key={index}\r\n              source={{ uri: image.url }}\r\n              style={{ width: 400, height: 200 }}\r\n              resizeMode=\"cover\"\r\n            />\r\n          ))}\r\n        </ScrollView>\r\n        {/* Display detailed information about the post using the 'post' object */}\r\n        <Text>Title: {post.title}</Text>\r\n        <Text>Model: {post.model}</Text>\r\n        <Text>Make: {post?.make}</Text>\r\n        <Text>Variant: {post?.variant}</Text>\r\n        <Text>Description: {post?.description}</Text>\r\n        <Text>PostedBy: {post?.postedBy?.name}</Text>\r\n        {/* ... other details ... */}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  innerContainer: {\r\n    height: height * 0.4, // Adjust as needed\r\n    width: width,\r\n    backgroundColor: \"#D9D9D9\",\r\n    borderRadius: 25,\r\n    marginBottom: 20,\r\n    marginTop: 10,\r\n  },\r\n});\r\n\r\nexport default PostDetailScreen;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE1B,IAAAC,eAAA,GAA0BC,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC;EAA1CC,KAAK,GAAAH,eAAA,CAALG,KAAK;EAAEC,MAAM,GAAAJ,eAAA,CAANI,MAAM;AACrB,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAAC,IAAA,EAAkB;EAAA,IAAAC,cAAA;EAAA,IAAZC,KAAK,GAAAF,IAAA,CAALE,KAAK;EAC/B,IAAQC,IAAI,GAAKD,KAAK,CAACE,MAAM,CAArBD,IAAI;EAEZ,OACEZ,IAAA,CAACN,IAAI;IAAAoB,QAAA,EAEHZ,KAAA,CAACR,IAAI;MAACqB,KAAK,EAAEC,MAAM,CAACC,cAAe;MAAAH,QAAA,GACjCd,IAAA,CAACF,UAAU;QAACoB,UAAU;QAAAJ,QAAA,EACnBF,IAAI,oBAAJA,IAAI,CAAEO,UAAU,CAACC,GAAG,CAAC,UAACC,KAAK,EAAEC,KAAK;UAAA,OACjCtB,IAAA,CAACJ,KAAK;YAEJ2B,MAAM,EAAE;cAAEC,GAAG,EAAEH,KAAK,CAACI;YAAI,CAAE;YAC3BV,KAAK,EAAE;cAAET,KAAK,EAAE,GAAG;cAAEC,MAAM,EAAE;YAAI,CAAE;YACnCmB,UAAU,EAAC;UAAO,GAHbJ,KAIN,CAAC;QAAA,CACH;MAAC,CACQ,CAAC,EAEbpB,KAAA,CAACP,IAAI;QAAAmB,QAAA,GAAC,SAAO,EAACF,IAAI,CAACe,KAAK;MAAA,CAAO,CAAC,EAChCzB,KAAA,CAACP,IAAI;QAAAmB,QAAA,GAAC,SAAO,EAACF,IAAI,CAACgB,KAAK;MAAA,CAAO,CAAC,EAChC1B,KAAA,CAACP,IAAI;QAAAmB,QAAA,GAAC,QAAM,EAACF,IAAI,oBAAJA,IAAI,CAAEiB,IAAI;MAAA,CAAO,CAAC,EAC/B3B,KAAA,CAACP,IAAI;QAAAmB,QAAA,GAAC,WAAS,EAACF,IAAI,oBAAJA,IAAI,CAAEkB,OAAO;MAAA,CAAO,CAAC,EACrC5B,KAAA,CAACP,IAAI;QAAAmB,QAAA,GAAC,eAAa,EAACF,IAAI,oBAAJA,IAAI,CAAEmB,WAAW;MAAA,CAAO,CAAC,EAC7C7B,KAAA,CAACP,IAAI;QAAAmB,QAAA,GAAC,YAAU,EAACF,IAAI,qBAAAF,cAAA,GAAJE,IAAI,CAAEoB,QAAQ,qBAAdtB,cAAA,CAAgBuB,IAAI;MAAA,CAAO,CAAC;IAAA,CAEzC;EAAC,CACH,CAAC;AAEX,CAAC;AAED,IAAMjB,MAAM,GAAGnB,UAAU,CAACqC,MAAM,CAAC;EAC/BjB,cAAc,EAAE;IACdV,MAAM,EAAEA,MAAM,GAAG,GAAG;IACpBD,KAAK,EAAEA,KAAK;IACZ6B,eAAe,EAAE,SAAS;IAC1BC,YAAY,EAAE,EAAE;IAChBC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,eAAe9B,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}