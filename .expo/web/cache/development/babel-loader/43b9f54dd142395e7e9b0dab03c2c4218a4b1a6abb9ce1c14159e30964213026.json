{"ast":null,"code":"import { useNavigation } from \"@react-navigation/native\";\nimport React from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Menu = function Menu(_ref) {\n  var children = _ref.children;\n  var navigation = useNavigation();\n  var screenWidth = Dimensions.get(\"window\").width;\n  var buttonWidth = screenWidth / 5;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.content,\n      children: children\n    }), _jsx(View, {\n      style: styles.menuContainer,\n      children: _jsx(View, {\n        style: styles.mainContainer\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  content: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  menuContainer: {\n    position: \"absolute\",\n    bottom: 0,\n    width: \"100%\"\n  },\n  mainContainer: {\n    flexDirection: \"row\"\n  },\n  buttonStyle: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: 68,\n    backgroundColor: \"#C9F3F6\"\n  },\n  textStyle: {\n    fontWeight: \"bold\"\n  }\n});\nexport default Menu;","map":{"version":3,"names":["useNavigation","React","TouchableOpacity","View","StyleSheet","Text","Dimensions","MaterialIcons","Entypo","Ionicons","FontAwesome5","FontAwesome","jsx","_jsx","jsxs","_jsxs","Menu","_ref","children","navigation","screenWidth","get","width","buttonWidth","style","styles","container","content","menuContainer","mainContainer","create","flex","backgroundColor","position","bottom","flexDirection","buttonStyle","justifyContent","alignItems","height","textStyle","fontWeight"],"sources":["G:/Tehreem/Documents/Flex-Share/Flex-Share/client/src/Component/Menu.js"],"sourcesContent":["import { useNavigation } from \"@react-navigation/native\";\r\nimport React from \"react\";\r\nimport {\r\n  TouchableOpacity,\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { Entypo } from \"@expo/vector-icons\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { FontAwesome5 } from \"@expo/vector-icons\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\n\r\nconst Menu = ({ children }) => {\r\n  const navigation = useNavigation();\r\n  const screenWidth = Dimensions.get(\"window\").width;\r\n  const buttonWidth = screenWidth / 5; // Divide the screen width by the number of buttons\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.content}>{children}</View>\r\n      <View style={styles.menuContainer}>\r\n        <View style={styles.mainContainer}>{/* Your menu buttons */}</View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\", // Set your main content background color\r\n  },\r\n  menuContainer: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    width: \"100%\",\r\n  },\r\n  mainContainer: {\r\n    flexDirection: \"row\",\r\n    // Rest of your styles for menu buttons\r\n  },\r\n  buttonStyle: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: 68,\r\n    backgroundColor: \"#C9F3F6\",\r\n  },\r\n  textStyle: {\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nexport default Menu;\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,KAAK,MAAM,OAAO;AAAC,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAQ1B,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,WAAW,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjD,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACtB,IAAMC,UAAU,GAAGnB,aAAa,CAAC,CAAC;EAClC,IAAMoB,WAAW,GAAGd,UAAU,CAACe,GAAG,CAAC,QAAQ,CAAC,CAACC,KAAK;EAClD,IAAMC,WAAW,GAAGH,WAAW,GAAG,CAAC;EAEnC,OACEL,KAAA,CAACZ,IAAI;IAACqB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAR,QAAA,GAC5BL,IAAA,CAACV,IAAI;MAACqB,KAAK,EAAEC,MAAM,CAACE,OAAQ;MAAAT,QAAA,EAAEA;IAAQ,CAAO,CAAC,EAC9CL,IAAA,CAACV,IAAI;MAACqB,KAAK,EAAEC,MAAM,CAACG,aAAc;MAAAV,QAAA,EAChCL,IAAA,CAACV,IAAI;QAACqB,KAAK,EAAEC,MAAM,CAACI;MAAc,CAAgC;IAAC,CAC/D,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAED,IAAMJ,MAAM,GAAGrB,UAAU,CAAC0B,MAAM,CAAC;EAC/BJ,SAAS,EAAE;IACTK,IAAI,EAAE;EACR,CAAC;EACDJ,OAAO,EAAE;IACPI,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACnB,CAAC;EACDJ,aAAa,EAAE;IACbK,QAAQ,EAAE,UAAU;IACpBC,MAAM,EAAE,CAAC;IACTZ,KAAK,EAAE;EACT,CAAC;EACDO,aAAa,EAAE;IACbM,aAAa,EAAE;EAEjB,CAAC;EACDC,WAAW,EAAE;IACXC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,MAAM,EAAE,EAAE;IACVP,eAAe,EAAE;EACnB,CAAC;EACDQ,SAAS,EAAE;IACTC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAezB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}