{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SellerButtons = function SellerButtons(_ref) {\n  var imageSource = _ref.imageSource,\n    placeholder = _ref.placeholder,\n    options = _ref.options,\n    onSelect = _ref.onSelect;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedItems = _useState2[0],\n    setSelectedItems = _useState2[1];\n  return _jsx(View, {\n    style: styles.searchContainer,\n    children: _jsx(View, {\n      style: styles.searchbuttonStyle,\n      children: _jsxs(View, {\n        style: styles.buttonContent,\n        children: [_jsx(View, {\n          style: styles.circle\n        }), _jsx(Image, {\n          source: imageSource,\n          style: styles.btnImageStyle,\n          resizeMode: \"contain\"\n        }), _jsx(DropDownPicker, {\n          items: options.map(function (option) {\n            return {\n              label: option.label,\n              value: option.value\n            };\n          }),\n          placeholder: placeholder,\n          defaultValue: selectedItems,\n          containerStyle: styles.dropdownContainer,\n          style: styles.inputStyle,\n          dropDownStyle: styles.dropDownStyle,\n          multiple: true,\n          multipleText: \"%d items have been selected\",\n          onChangeItem: function onChangeItem(item) {\n            setSelectedItems(item);\n            onSelect(item);\n          }\n        })]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  btnContainer: {\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  textStyle: {\n    paddingHorizontal: 35,\n    fontSize: 15,\n    color: \"black\",\n    fontWeight: \"bold\"\n  },\n  searchbuttonStyle: {\n    backgroundColor: \"#FFFFFF\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    gap: 5,\n    alignItems: \"center\",\n    borderRadius: 26,\n    width: 342,\n    height: 81\n  },\n  buttonContent: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    flex: 1\n  },\n  circle: {\n    width: 70,\n    height: 70,\n    borderRadius: 35,\n    backgroundColor: \"#2F2E41\",\n    position: \"absolute\",\n    top: -10,\n    left: 10\n  },\n  btnImageStyle: {\n    width: 60,\n    height: 50,\n    left: 10,\n    bottom: 0\n  },\n  iconContainer: {\n    flexDirection: \"row\",\n    marginLeft: 10,\n    marginRight: 10,\n    alignItems: \"center\"\n  },\n  icon: {\n    marginLeft: 10\n  },\n  dropdownContainer: {\n    height: 40,\n    width: 200\n  },\n  inputStyle: {\n    backgroundColor: \"#FFFFFF\"\n  },\n  dropDownStyle: {\n    backgroundColor: \"#FFFFFF\"\n  }\n});\nexport default SellerButtons;","map":{"version":3,"names":["React","useState","StyleSheet","View","Image","DropDownPicker","jsx","_jsx","jsxs","_jsxs","SellerButtons","_ref","imageSource","placeholder","options","onSelect","_useState","_useState2","_slicedToArray","selectedItems","setSelectedItems","style","styles","searchContainer","children","searchbuttonStyle","buttonContent","circle","source","btnImageStyle","resizeMode","items","map","option","label","value","defaultValue","containerStyle","dropdownContainer","inputStyle","dropDownStyle","multiple","multipleText","onChangeItem","item","create","btnContainer","alignItems","marginTop","textStyle","paddingHorizontal","fontSize","color","fontWeight","backgroundColor","display","flexDirection","gap","borderRadius","width","height","flex","position","top","left","bottom","iconContainer","marginLeft","marginRight","icon"],"sources":["G:/Tehreem/Documents/Flex-Share/Flex-Share/client/src/Component/Home/SellerButtons.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, View, Image } from \"react-native\";\r\nimport DropDownPicker from \"react-native-dropdown-picker\";\r\n\r\nconst SellerButtons = ({ imageSource, placeholder, options, onSelect }) => {\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n\r\n  return (\r\n    <View style={styles.searchContainer}>\r\n      <View style={styles.searchbuttonStyle}>\r\n        <View style={styles.buttonContent}>\r\n          <View style={styles.circle}></View>\r\n          <Image\r\n            source={imageSource}\r\n            style={styles.btnImageStyle}\r\n            resizeMode=\"contain\"\r\n          />\r\n          <DropDownPicker\r\n            items={options.map((option) => ({\r\n              label: option.label,\r\n              value: option.value,\r\n            }))}\r\n            placeholder={placeholder}\r\n            defaultValue={selectedItems}\r\n            containerStyle={styles.dropdownContainer}\r\n            style={styles.inputStyle}\r\n            dropDownStyle={styles.dropDownStyle}\r\n            multiple={true}\r\n            multipleText=\"%d items have been selected\"\r\n            onChangeItem={(item) => {\r\n              setSelectedItems(item);\r\n              onSelect(item);\r\n            }}\r\n          />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  btnContainer: {\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n  },\r\n  textStyle: {\r\n    paddingHorizontal: 35,\r\n    fontSize: 15,\r\n    color: \"black\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  searchbuttonStyle: {\r\n    backgroundColor: \"#FFFFFF\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    gap: 5,\r\n    alignItems: \"center\",\r\n    borderRadius: 26,\r\n    width: 342,\r\n    height: 81,\r\n  },\r\n  buttonContent: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    flex: 1,\r\n  },\r\n  circle: {\r\n    width: 70,\r\n    height: 70,\r\n    borderRadius: 35,\r\n    backgroundColor: \"#2F2E41\",\r\n    position: \"absolute\",\r\n    top: -10,\r\n    left: 10,\r\n  },\r\n  btnImageStyle: {\r\n    width: 60,\r\n    height: 50,\r\n    left: 10,\r\n    bottom: 0,\r\n  },\r\n  iconContainer: {\r\n    flexDirection: \"row\",\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n    alignItems: \"center\",\r\n  },\r\n  icon: {\r\n    marginLeft: 10,\r\n  },\r\n  dropdownContainer: {\r\n    height: 40,\r\n    width: 200,\r\n  },\r\n  inputStyle: {\r\n    backgroundColor: \"#FFFFFF\",\r\n  },\r\n  dropDownStyle: {\r\n    backgroundColor: \"#FFFFFF\",\r\n  },\r\n});\r\nexport default SellerButtons;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}