{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as WebBrowser from \"expo-web-browser\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useOAuth } from \"@clerk/clerk-expo\";\nimport { useWarmUpBrowser } from \"../../hooks/warmUpBrowser\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nWebBrowser.maybeCompleteAuthSession();\nvar SignInWithOAuth = function SignInWithOAuth() {\n  useWarmUpBrowser();\n  var _useOAuth = useOAuth({\n      strategy: \"oauth_google\"\n    }),\n    startOAuthFlow = _useOAuth.startOAuthFlow;\n  var onPress = React.useCallback(_asyncToGenerator(function* () {\n    try {\n      var _yield$startOAuthFlow = yield startOAuthFlow(),\n        createdSessionId = _yield$startOAuthFlow.createdSessionId,\n        signIn = _yield$startOAuthFlow.signIn,\n        signUp = _yield$startOAuthFlow.signUp,\n        setActive = _yield$startOAuthFlow.setActive;\n      if (createdSessionId) {\n        setActive({\n          session: createdSessionId\n        });\n      } else {}\n    } catch (err) {\n      console.error(\"OAuth error\", err);\n    }\n  }), []);\n  return _jsx(TouchableOpacity, {\n    style: styles.buttonStyle,\n    onPress: onPress,\n    children: _jsx(Text, {\n      style: styles.buttonText,\n      children: \"SIGN IN WITH GOOGLE\"\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  buttonStyle: {\n    marginTop: 20,\n    backgroundColor: \"#009688\",\n    borderRadius: 10,\n    paddingVertical: 15,\n    paddingHorizontal: 20\n  },\n  buttonText: {\n    fontSize: 18,\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  }\n});\nexport default SignInWithOAuth;","map":{"version":3,"names":["React","Text","StyleSheet","TouchableOpacity","WebBrowser","Button","useOAuth","useWarmUpBrowser","jsx","_jsx","maybeCompleteAuthSession","SignInWithOAuth","_useOAuth","strategy","startOAuthFlow","onPress","useCallback","_asyncToGenerator","_yield$startOAuthFlow","createdSessionId","signIn","signUp","setActive","session","err","console","error","style","styles","buttonStyle","children","buttonText","create","marginTop","backgroundColor","borderRadius","paddingVertical","paddingHorizontal","fontSize","color","fontWeight","textAlign"],"sources":["G:/Tehreem/FinalYearProject/Flex-Share-FYP/Flex-Share/client/src/Component/SignInWithOAuth.js"],"sourcesContent":["import React from \"react\";\r\nimport { Text, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport * as WebBrowser from \"expo-web-browser\";\r\nimport { Button } from \"react-native\";\r\nimport { useOAuth } from \"@clerk/clerk-expo\";\r\nimport { useWarmUpBrowser } from \"../../hooks/warmUpBrowser\";\r\n\r\nWebBrowser.maybeCompleteAuthSession();\r\n\r\nconst SignInWithOAuth = () => {\r\n  // Warm up the android browser to improve UX\r\n  // https://docs.expo.dev/guides/authentication/#improving-user-experience\r\n  useWarmUpBrowser();\r\n\r\n  const { startOAuthFlow } = useOAuth({ strategy: \"oauth_google\" });\r\n\r\n  const onPress = React.useCallback(async () => {\r\n    try {\r\n      const { createdSessionId, signIn, signUp, setActive } =\r\n        await startOAuthFlow();\r\n\r\n      if (createdSessionId) {\r\n        setActive({ session: createdSessionId });\r\n      } else {\r\n        // Use signIn or signUp for next steps such as MFA\r\n      }\r\n    } catch (err) {\r\n      console.error(\"OAuth error\", err);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <TouchableOpacity style={styles.buttonStyle} onPress={onPress}>\r\n      <Text style={styles.buttonText}>SIGN IN WITH GOOGLE</Text>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  buttonStyle: {\r\n    marginTop: 20,\r\n    backgroundColor: \"#009688\",\r\n    borderRadius: 10,\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 20,\r\n  },\r\n  buttonText: {\r\n    fontSize: 18,\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\nexport default SignInWithOAuth;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAE1B,OAAO,KAAKC,UAAU,MAAM,kBAAkB;AAAC,OAAAC,MAAA;AAE/C,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,gBAAgB;AAAoC,SAAAC,GAAA,IAAAC,IAAA;AAE7DL,UAAU,CAACM,wBAAwB,CAAC,CAAC;AAErC,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;EAG5BJ,gBAAgB,CAAC,CAAC;EAElB,IAAAK,SAAA,GAA2BN,QAAQ,CAAC;MAAEO,QAAQ,EAAE;IAAe,CAAC,CAAC;IAAzDC,cAAc,GAAAF,SAAA,CAAdE,cAAc;EAEtB,IAAMC,OAAO,GAAGf,KAAK,CAACgB,WAAW,CAAAC,iBAAA,CAAC,aAAY;IAC5C,IAAI;MACF,IAAAC,qBAAA,SACQJ,cAAc,CAAC,CAAC;QADhBK,gBAAgB,GAAAD,qBAAA,CAAhBC,gBAAgB;QAAEC,MAAM,GAAAF,qBAAA,CAANE,MAAM;QAAEC,MAAM,GAAAH,qBAAA,CAANG,MAAM;QAAEC,SAAS,GAAAJ,qBAAA,CAATI,SAAS;MAGnD,IAAIH,gBAAgB,EAAE;QACpBG,SAAS,CAAC;UAAEC,OAAO,EAAEJ;QAAiB,CAAC,CAAC;MAC1C,CAAC,MAAM,CAEP;IACF,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,aAAa,EAAEF,GAAG,CAAC;IACnC;EACF,CAAC,GAAE,EAAE,CAAC;EAEN,OACEf,IAAA,CAACN,gBAAgB;IAACwB,KAAK,EAAEC,MAAM,CAACC,WAAY;IAACd,OAAO,EAAEA,OAAQ;IAAAe,QAAA,EAC5DrB,IAAA,CAACR,IAAI;MAAC0B,KAAK,EAAEC,MAAM,CAACG,UAAW;MAAAD,QAAA,EAAC;IAAmB,CAAM;EAAC,CAC1C,CAAC;AAEvB,CAAC;AACD,IAAMF,MAAM,GAAG1B,UAAU,CAAC8B,MAAM,CAAC;EAC/BH,WAAW,EAAE;IACXI,SAAS,EAAE,EAAE;IACbC,eAAe,EAAE,SAAS;IAC1BC,YAAY,EAAE,EAAE;IAChBC,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE;EACrB,CAAC;EACDN,UAAU,EAAE;IACVO,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,OAAO;IACdC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AACF,eAAe9B,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}