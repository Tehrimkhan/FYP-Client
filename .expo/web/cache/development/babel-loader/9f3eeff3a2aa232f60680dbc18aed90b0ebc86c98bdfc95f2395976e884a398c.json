{"ast":null,"code":"import React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport moment from \"moment\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  width = _Dimensions$get.width;\nvar AdsCards = function AdsCards(_ref) {\n  var posts = _ref.posts,\n    myPostScreen = _ref.myPostScreen,\n    userId = _ref.userId;\n  var navigation = useNavigation();\n  var handlePostPress = function handlePostPress(post, myPostScreen, userId) {\n    navigation.navigate(\"PostDetailScreen\", {\n      post: post,\n      myPostScreen: myPostScreen,\n      userId: userId\n    });\n  };\n  return _jsx(View, {\n    children: _jsx(View, {\n      style: styles.container,\n      children: posts == null ? void 0 : posts.map(function (post, index) {\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return handlePostPress(post, myPostScreen, userId);\n          },\n          children: _jsxs(View, {\n            style: styles.innerContainer,\n            children: [_jsx(ScrollView, {\n              horizontal: true,\n              showsHorizontalScrollIndicator: false,\n              pagingEnabled: true,\n              children: post == null ? void 0 : post.postImages.map(function (image, imageIndex) {\n                return _jsx(Image, {\n                  source: {\n                    uri: image.url\n                  },\n                  style: styles.card,\n                  resizeMode: \"cover\",\n                  onError: function onError(e) {\n                    return console.log(\"Error loading image:\", e.nativeEvent.error);\n                  }\n                }, imageIndex);\n              })\n            }), _jsxs(View, {\n              style: styles.innerTextContainer,\n              children: [_jsxs(View, {\n                style: styles.titleContainer,\n                children: [_jsx(Text, {\n                  style: styles.titleHeading,\n                  children: post == null ? void 0 : post.name\n                }), _jsxs(Text, {\n                  style: styles.titleHeading,\n                  children: [\" \", post.room ? ` Room: ${post.room}` : ` Model: ${post.model}`]\n                }), _jsxs(Text, {\n                  style: styles.titlerentHeading,\n                  children: [\" \", \"| Rent: \", post == null ? void 0 : post.rent]\n                })]\n              }), _jsxs(View, {\n                style: styles.postDetailsContainer,\n                children: [_jsx(View, {\n                  style: styles.ratingContainer\n                }), _jsx(Text, {\n                  style: styles.postDetailsText,\n                  children: moment(post == null ? void 0 : post.createdAt).format(\"DD:MM:YYYY\")\n                })]\n              })]\n            })]\n          }, index)\n        }, index);\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {},\n  innerContainer: {\n    height: 294,\n    width: 338,\n    backgroundColor: \"#D9D9D9\",\n    borderRadius: 25,\n    marginBottom: 20,\n    marginTop: 10\n  },\n  card: {\n    width: 340,\n    height: 200,\n    resizeMode: \"cover\",\n    overflow: \"hidden\",\n    borderRadius: 25,\n    backgroundColor: \"#D9D9D9\"\n  },\n  innerTextContainer: {\n    height: 70,\n    backgroundColor: \"white\",\n    borderRadius: 25,\n    bottom: 10,\n    marginLeft: 5,\n    marginRight: 5\n  },\n  titleHeading: {\n    fontSize: 18,\n    fontFamily: \"appfont\"\n  },\n  titleContainer: {\n    flexDirection: \"row\",\n    top: 1,\n    fontWeight: \"bold\",\n    left: 20\n  },\n  titlerentHeading: {\n    fontSize: 15,\n    top: 4,\n    fontWeight: \"bold\"\n  },\n  postDetailsContainer: {\n    top: 15,\n    flexDirection: \"row\"\n  },\n  postDetailsText: {\n    textAlign: \"right\",\n    left: 130,\n    bottom: 5\n  },\n  ratingContainer: {\n    flexDirection: \"row\",\n    left: 20,\n    bottom: 10\n  }\n});\nexport default AdsCards;","map":{"version":3,"names":["React","StyleSheet","View","Dimensions","ScrollView","Text","Image","TouchableOpacity","moment","Ionicons","useNavigation","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","AdsCards","_ref","posts","myPostScreen","userId","navigation","handlePostPress","post","navigate","children","style","styles","container","map","index","onPress","innerContainer","horizontal","showsHorizontalScrollIndicator","pagingEnabled","postImages","image","imageIndex","source","uri","url","card","resizeMode","onError","e","console","log","nativeEvent","error","innerTextContainer","titleContainer","titleHeading","name","room","model","titlerentHeading","rent","postDetailsContainer","ratingContainer","postDetailsText","createdAt","format","create","height","backgroundColor","borderRadius","marginBottom","marginTop","overflow","bottom","marginLeft","marginRight","fontSize","fontFamily","flexDirection","top","fontWeight","left","textAlign"],"sources":["E:/Tehreem/FINAL/client/src/Component/Banner/AdsCards.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Dimensions,\r\n  ScrollView,\r\n  Text,\r\n  Image,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport moment from \"moment\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n// import { AirbnbRating } from \"react-native-ratings\";\r\n\r\nconst { width } = Dimensions.get(\"window\");\r\n\r\nconst AdsCards = ({ posts, myPostScreen, userId }) => {\r\n  const navigation = useNavigation();\r\n  // console.log(\"USER ID FROM ADS\", userId);\r\n  const handlePostPress = (post, myPostScreen, userId) => {\r\n    navigation.navigate(\"PostDetailScreen\", { post, myPostScreen, userId });\r\n  };\r\n  return (\r\n    <View>\r\n      <View style={styles.container}>\r\n        {posts?.map((post, index) => (\r\n          <TouchableOpacity\r\n            key={index}\r\n            onPress={() => handlePostPress(post, myPostScreen, userId)}\r\n          >\r\n            <View style={styles.innerContainer} key={index}>\r\n              <ScrollView\r\n                horizontal\r\n                showsHorizontalScrollIndicator={false}\r\n                pagingEnabled\r\n              >\r\n                {post?.postImages.map((image, imageIndex) => (\r\n                  <Image\r\n                    key={imageIndex}\r\n                    source={{ uri: image.url }}\r\n                    style={styles.card}\r\n                    resizeMode=\"cover\"\r\n                    onError={(e) =>\r\n                      console.log(\"Error loading image:\", e.nativeEvent.error)\r\n                    }\r\n                  />\r\n                ))}\r\n              </ScrollView>\r\n              <View style={styles.innerTextContainer}>\r\n                <View style={styles.titleContainer}>\r\n                  <Text style={styles.titleHeading}>{post?.name}</Text>\r\n                  <Text style={styles.titleHeading}>\r\n                    {\" \"}\r\n                    {post.room\r\n                      ? ` Room: ${post.room}`\r\n                      : ` Model: ${post.model}`}\r\n                  </Text>\r\n                  <Text style={styles.titlerentHeading}>\r\n                    {\" \"}\r\n                    | Rent: {post?.rent}\r\n                  </Text>\r\n                </View>\r\n                {/* <Text>Make: {post?.make}</Text> */}\r\n                {/* <Text>Variant: {post?.variant}</Text>\r\n                <Text>Description: {post?.description}</Text> */}\r\n                <View style={styles.postDetailsContainer}>\r\n                  {/* <Text>PostedBy: {post?.postedBy?.name}</Text> */}\r\n                  <View style={styles.ratingContainer}>\r\n                    {/* <Ionicons name=\"star\" size={24} color=\"black\" />\r\n                    <Ionicons name=\"star\" size={24} color=\"black\" />\r\n                    <Ionicons name=\"star\" size={24} color=\"black\" />\r\n                    <Ionicons name=\"star\" size={24} color=\"black\" />\r\n                    <Ionicons name=\"star-outline\" size={24} color=\"black\" /> */}\r\n                  </View>\r\n                  <Text style={styles.postDetailsText}>\r\n                    {moment(post?.createdAt).format(\"DD:MM:YYYY\")}\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    // flex: 1,\r\n  },\r\n  innerContainer: {\r\n    height: 294,\r\n    width: 338,\r\n    backgroundColor: \"#D9D9D9\",\r\n    borderRadius: 25,\r\n    marginBottom: 20,\r\n    marginTop: 10,\r\n  },\r\n  card: {\r\n    width: 340,\r\n    height: 200,\r\n    resizeMode: \"cover\",\r\n    overflow: \"hidden\",\r\n    borderRadius: 25,\r\n    backgroundColor: \"#D9D9D9\",\r\n  },\r\n  innerTextContainer: {\r\n    height: 70,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 25,\r\n    bottom: 10,\r\n    marginLeft: 5,\r\n    marginRight: 5,\r\n  },\r\n  titleHeading: {\r\n    fontSize: 18,\r\n    fontFamily: \"appfont\",\r\n  },\r\n  titleContainer: {\r\n    flexDirection: \"row\",\r\n    top: 1,\r\n    fontWeight: \"bold\",\r\n    left: 20,\r\n  },\r\n  titlerentHeading: {\r\n    fontSize: 15,\r\n    top: 4,\r\n    fontWeight: \"bold\",\r\n  },\r\n  postDetailsContainer: {\r\n    // flex: 1,\r\n    top: 15,\r\n    flexDirection: \"row\",\r\n  },\r\n  postDetailsText: {\r\n    textAlign: \"right\",\r\n    left: 130,\r\n    bottom: 5,\r\n  },\r\n  ratingContainer: {\r\n    flexDirection: \"row\",\r\n    // right: 55,\r\n    left: 20,\r\n    bottom: 10,\r\n  },\r\n});\r\n\r\nexport default AdsCards;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}