{"ast":null,"code":"","map":{"version":3,"names":[],"sources":["G:/Tehreem/FinalYearProject/Flex-Share-FYP/Flex-Share/client/src/context/authContext.js"],"sourcesContent":["// import React, { createContext, useState, useEffect } from \"react\";\r\n// import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n// import axios from \"axios\";\r\n\r\n// //CONTEXT\r\n// const AuthContext = createContext();\r\n\r\n// //provider\r\n// const AuthProvider = ({ children }) => {\r\n//   //golbal state\r\n//   const [state, setState] = useState({\r\n//     user: null,\r\n//     token: \"\",\r\n//   });\r\n\r\n//   //INITIAL LOCAL STORAGE DATA\r\n//   useEffect(() => {\r\n//     const getLocalStorageData = async () => {\r\n//       try {\r\n//         let data = await AsyncStorage.getItem(\"@auth\");\r\n//         let loginData = JSON.parse(data);\r\n//         console.log(\"========133333333333333331===\", loginData);\r\n//         setState((state) => ({\r\n//           ...state,\r\n//           user: loginData?.data?.user || null,\r\n//           token: loginData?.data?.token || \"\",\r\n//         }));\r\n//       } catch (error) {\r\n//         console.error(\"Error retrieving data from AsyncStorage:\", error);\r\n//       }\r\n//     };\r\n\r\n//     getLocalStorageData();\r\n//   }, []);\r\n//   console.log(\"========1111111111111111111===\", state.token);\r\n//   // default axios setting\r\n//   axios.interceptors.request.use((config) => {\r\n//     const token = state.token;\r\n//     console.log(\"Token:=============\", token);\r\n//     if (token) {\r\n//       config.headers.Authorization = `Bearer ${token}`;\r\n//     }\r\n//     return config;\r\n//   });\r\n\r\n//   axios.defaults.baseURL = \"http://127.0.0.1:8080/api\";\r\n//   axios.defaults.headers = {\r\n//     \"Content-Type\": \"application/json\",\r\n//   };\r\n\r\n//   return (\r\n//     <AuthContext.Provider value={[state, setState]}>\r\n//       {children}\r\n//     </AuthContext.Provider>\r\n//   );\r\n// };\r\n\r\n// export { AuthContext, AuthProvider };\r\n"],"mappings":""},"metadata":{},"sourceType":"script","externalDependencies":[]}