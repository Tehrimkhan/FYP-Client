{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProductDisplay = function ProductDisplay() {\n  return _jsxs(View, {\n    style: {\n      padding: 16\n    },\n    children: [_jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\"\n      },\n      children: [_jsx(Image, {\n        source: {\n          uri: \"https://i.imgur.com/EHyR2nP.png\"\n        },\n        style: {\n          width: 100,\n          height: 100,\n          marginRight: 16\n        }\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 20,\n            fontWeight: \"bold\"\n          },\n          children: \"Stubborn Attachments\"\n        }), _jsx(Text, {\n          style: {\n            fontSize: 16,\n            color: \"#888\"\n          },\n          children: \"$20.00\"\n        })]\n      })]\n    }), _jsx(Button, {\n      title: \"Checkout\",\n      onPress: function onPress() {\n        return alert(\"Implement checkout logic\");\n      }\n    })]\n  });\n};\nvar Message = function Message(_ref) {\n  var message = _ref.message;\n  return _jsx(View, {\n    style: {\n      padding: 16\n    },\n    children: _jsx(Text, {\n      children: message\n    })\n  });\n};\nexport default function App() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    message = _useState2[0],\n    setMessage = _useState2[1];\n  useEffect(function () {\n    var query = new URLSearchParams(\"success=true\");\n    if (query.get(\"success\")) {\n      setMessage(\"Order placed! You will receive an email confirmation.\");\n    }\n    if (query.get(\"canceled\")) {\n      setMessage(\"Order canceled -- continue to shop around and checkout when you're ready.\");\n    }\n  }, []);\n  return message ? _jsx(Message, {\n    message: message\n  }) : _jsx(ProductDisplay, {});\n}","map":{"version":3,"names":["React","useState","useEffect","View","Text","Image","Button","jsx","_jsx","jsxs","_jsxs","ProductDisplay","style","padding","children","flexDirection","alignItems","source","uri","width","height","marginRight","fontSize","fontWeight","color","title","onPress","alert","Message","_ref","message","App","_useState","_useState2","_slicedToArray","setMessage","query","URLSearchParams","get"],"sources":["G:/Tehreem/FinalYearProject/Flex-Share-FYP/Flex-Share/client/src/Payment/PaymentPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, Image, Button } from \"react-native\";\r\n\r\nconst ProductDisplay = () => (\r\n  <View style={{ padding: 16 }}>\r\n    <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n      <Image\r\n        source={{ uri: \"https://i.imgur.com/EHyR2nP.png\" }}\r\n        style={{ width: 100, height: 100, marginRight: 16 }}\r\n      />\r\n      <View>\r\n        <Text style={{ fontSize: 20, fontWeight: \"bold\" }}>\r\n          Stubborn Attachments\r\n        </Text>\r\n        <Text style={{ fontSize: 16, color: \"#888\" }}>$20.00</Text>\r\n      </View>\r\n    </View>\r\n    <Button\r\n      title=\"Checkout\"\r\n      onPress={() => alert(\"Implement checkout logic\")}\r\n    />\r\n  </View>\r\n);\r\n\r\nconst Message = ({ message }) => (\r\n  <View style={{ padding: 16 }}>\r\n    <Text>{message}</Text>\r\n  </View>\r\n);\r\n\r\nexport default function App() {\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Check to see if this is a redirect back from Checkout\r\n    // You might need to handle navigation logic specific to your app\r\n    // For simplicity, I'm using an alert here\r\n    const query = new URLSearchParams(\"success=true\"); // Replace with your navigation logic\r\n\r\n    if (query.get(\"success\")) {\r\n      setMessage(\"Order placed! You will receive an email confirmation.\");\r\n    }\r\n\r\n    if (query.get(\"canceled\")) {\r\n      setMessage(\r\n        \"Order canceled -- continue to shop around and checkout when you're ready.\"\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  return message ? <Message message={message} /> : <ProductDisplay />;\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,MAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGnD,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA;EAAA,OAClBD,KAAA,CAACP,IAAI;IAACS,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,GAC3BJ,KAAA,CAACP,IAAI;MAACS,KAAK,EAAE;QAAEG,aAAa,EAAE,KAAK;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAF,QAAA,GAC1DN,IAAA,CAACH,KAAK;QACJY,MAAM,EAAE;UAAEC,GAAG,EAAE;QAAkC,CAAE;QACnDN,KAAK,EAAE;UAAEO,KAAK,EAAE,GAAG;UAAEC,MAAM,EAAE,GAAG;UAAEC,WAAW,EAAE;QAAG;MAAE,CACrD,CAAC,EACFX,KAAA,CAACP,IAAI;QAAAW,QAAA,GACHN,IAAA,CAACJ,IAAI;UAACQ,KAAK,EAAE;YAAEU,QAAQ,EAAE,EAAE;YAAEC,UAAU,EAAE;UAAO,CAAE;UAAAT,QAAA,EAAC;QAEnD,CAAM,CAAC,EACPN,IAAA,CAACJ,IAAI;UAACQ,KAAK,EAAE;YAAEU,QAAQ,EAAE,EAAE;YAAEE,KAAK,EAAE;UAAO,CAAE;UAAAV,QAAA,EAAC;QAAM,CAAM,CAAC;MAAA,CACvD,CAAC;IAAA,CACH,CAAC,EACPN,IAAA,CAACF,MAAM;MACLmB,KAAK,EAAC,UAAU;MAChBC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMC,KAAK,CAAC,0BAA0B,CAAC;MAAA;IAAC,CAClD,CAAC;EAAA,CACE,CAAC;AAAA,CACR;AAED,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAAC,IAAA;EAAA,IAAMC,OAAO,GAAAD,IAAA,CAAPC,OAAO;EAAA,OACxBtB,IAAA,CAACL,IAAI;IAACS,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,EAC3BN,IAAA,CAACJ,IAAI;MAAAU,QAAA,EAAEgB;IAAO,CAAO;EAAC,CAClB,CAAC;AAAA,CACR;AAED,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAA8B/B,QAAQ,CAAC,EAAE,CAAC;IAAAgC,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCF,OAAO,GAAAG,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAE1B/B,SAAS,CAAC,YAAM;IAId,IAAMkC,KAAK,GAAG,IAAIC,eAAe,CAAC,cAAc,CAAC;IAEjD,IAAID,KAAK,CAACE,GAAG,CAAC,SAAS,CAAC,EAAE;MACxBH,UAAU,CAAC,uDAAuD,CAAC;IACrE;IAEA,IAAIC,KAAK,CAACE,GAAG,CAAC,UAAU,CAAC,EAAE;MACzBH,UAAU,CACR,2EACF,CAAC;IACH;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOL,OAAO,GAAGtB,IAAA,CAACoB,OAAO;IAACE,OAAO,EAAEA;EAAQ,CAAE,CAAC,GAAGtB,IAAA,CAACG,cAAc,IAAE,CAAC;AACrE"},"metadata":{},"sourceType":"module","externalDependencies":[]}