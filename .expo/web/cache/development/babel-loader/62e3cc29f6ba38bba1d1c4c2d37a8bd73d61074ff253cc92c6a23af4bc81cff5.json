{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRoute, useNavigation } from \"@react-navigation/native\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { API } from \"../api/config\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar stripePromise = loadStripe(\"pk_test_51OBalnCqGjyjTkAY9dTa4EdIxHfyluvV2pJtbExYurNHYgerZ0v3wnM4kz97bbIfgQ55YRbGPAqpxphvx0K6R2AC00CdB5YbIX\");\nvar PaymentPage = function PaymentPage() {\n  var _route$params;\n  var route = useRoute();\n  var navigation = useNavigation();\n  var paymentData = (_route$params = route.params) == null ? void 0 : _route$params.paymentData;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  useEffect(function () {\n    var handlePayment = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var token = API.defaults.headers.common[\"Authorization\"];\n          if (!token || token.trim() === \"\") {\n            alert(\"Authorization token missing. Please log in.\");\n            return;\n          }\n          var stripe = yield stripePromise;\n          var response = yield API.post(\"/post/create-checkout-session\", paymentData, {\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          });\n          var session = response.data;\n          var result = yield stripe.redirectToCheckout({\n            sessionId: session.id\n          });\n          setIsLoading(false);\n          if (result.error) {\n            console.error(result.error);\n            alert(\"Error processing payment\");\n          } else {\n            alert(\"Payment Successful!\");\n            var postImages = paymentData.postImages,\n              title = paymentData.title,\n              name = paymentData.name,\n              model = paymentData.model,\n              make = paymentData.make,\n              variant = paymentData.variant,\n              rent = paymentData.rent,\n              description = paymentData.description;\n            var createPostResponse = yield API.post(\"/post/create-post\", {\n              postImages: postImages,\n              title: title,\n              name: name,\n              model: model,\n              make: make,\n              variant: variant,\n              rent: rent,\n              description: description\n            }, {\n              headers: {\n                Authorization: token\n              }\n            });\n            alert(createPostResponse == null ? void 0 : createPostResponse.data.message);\n            alert(\"Post Will Be Published After Admin Approval\");\n            navigation.navigate(\"Dashboard\");\n          }\n        } catch (error) {\n          console.error(error);\n          setIsLoading(false);\n          alert(\"Error processing payment\");\n        }\n      });\n      return function handlePayment() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    handlePayment();\n  }, []);\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Processing Payment...\"\n    }), isLoading && _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#0000ff\"\n    })]\n  });\n};\nexport default PaymentPage;","map":{"version":3,"names":["React","useEffect","useState","useRoute","useNavigation","View","Text","ActivityIndicator","Alert","loadStripe","API","jsx","_jsx","jsxs","_jsxs","stripePromise","PaymentPage","_route$params","route","navigation","paymentData","params","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","handlePayment","_ref","_asyncToGenerator","token","defaults","headers","common","trim","alert","stripe","response","post","session","data","result","redirectToCheckout","sessionId","id","error","console","postImages","title","name","model","make","variant","rent","description","createPostResponse","Authorization","message","navigate","apply","arguments","children","size","color"],"sources":["E:/Tehreem/FINAL/client/src/Payment/PaymentPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useRoute, useNavigation } from \"@react-navigation/native\";\r\nimport { View, Text, ActivityIndicator, Alert } from \"react-native\"; // Import Alert\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { API } from \"../api/config\";\r\n\r\nconst stripePromise = loadStripe(\r\n  \"pk_test_51OBalnCqGjyjTkAY9dTa4EdIxHfyluvV2pJtbExYurNHYgerZ0v3wnM4kz97bbIfgQ55YRbGPAqpxphvx0K6R2AC00CdB5YbIX\"\r\n);\r\n\r\nconst PaymentPage = () => {\r\n  const route = useRoute();\r\n  const navigation = useNavigation();\r\n  const paymentData = route.params?.paymentData;\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const handlePayment = async () => {\r\n      try {\r\n        const token = API.defaults.headers.common[\"Authorization\"];\r\n\r\n        if (!token || token.trim() === \"\") {\r\n          alert(\"Authorization token missing. Please log in.\");\r\n          return;\r\n        }\r\n        const stripe = await stripePromise;\r\n        const response = await API.post(\r\n          \"/post/create-checkout-session\",\r\n          paymentData,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n\r\n        const session = response.data;\r\n\r\n        const result = await stripe.redirectToCheckout({\r\n          sessionId: session.id,\r\n        });\r\n\r\n        setIsLoading(false);\r\n\r\n        if (result.error) {\r\n          console.error(result.error);\r\n          alert(\"Error processing payment\");\r\n        } else {\r\n          alert(\"Payment Successful!\");\r\n          const {\r\n            postImages,\r\n            title,\r\n            name,\r\n            model,\r\n            make,\r\n            variant,\r\n            rent,\r\n            description,\r\n          } = paymentData;\r\n\r\n          const createPostResponse = await API.post(\r\n            \"/post/create-post\",\r\n            {\r\n              postImages,\r\n              title,\r\n              name,\r\n              model,\r\n              make,\r\n              variant,\r\n              rent,\r\n              description,\r\n            },\r\n            {\r\n              headers: {\r\n                Authorization: token,\r\n              },\r\n            }\r\n          );\r\n\r\n          alert(createPostResponse?.data.message);\r\n          alert(\"Post Will Be Published After Admin Approval\");\r\n\r\n          navigation.navigate(\"Dashboard\");\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        setIsLoading(false);\r\n        alert(\"Error processing payment\");\r\n      }\r\n    };\r\n\r\n    handlePayment();\r\n  }, []);\r\n\r\n  return (\r\n    <View>\r\n      <Text>Processing Payment...</Text>\r\n      {isLoading && <ActivityIndicator size=\"large\" color=\"#0000ff\" />}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default PaymentPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}