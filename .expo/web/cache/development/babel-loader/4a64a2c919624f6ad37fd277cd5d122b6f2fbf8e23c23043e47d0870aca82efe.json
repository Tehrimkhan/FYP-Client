{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar selectImage = function selectImage() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    images = _useState2[0],\n    setImages = _useState2[1];\n  var renderInputs = function renderInputs() {};\n  var handleImagePick = function () {\n    var _ref = _asyncToGenerator(function* () {});\n    return function handleImagePick() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [images.map(function (uri, index) {\n      return _jsx(Image, {\n        source: {\n          uri: uri\n        },\n        style: styles.imagePreview\n      }, uri);\n    }), renderInputs(), _jsxs(TouchableOpacity, {\n      style: [styles.imagePickerButton, {\n        backgroundColor: \"#DABFBF\"\n      }],\n      onPress: handleImagePick,\n      children: [_jsx(Ionicons, {\n        name: \"add-circle\",\n        size: 24,\n        color: \"black\"\n      }), _jsx(Text, {\n        style: styles.imagePickerText,\n        children: \"ADD IMAGE\"\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  buttonContainer: {\n    backgroundColor: \"black\",\n    padding: 10,\n    width: 250,\n    marginBottom: 20\n  },\n  buttonText: {\n    fontWeight: \"bold\",\n    color: \"white\",\n    textAlign: \"center\"\n  },\n  imageArea: {\n    width: 200,\n    height: 200,\n    resizeMode: \"cover\"\n  }\n});\nexport default selectImage;","map":{"version":3,"names":["React","useState","StyleSheet","Text","TouchableOpacity","View","Image","ImagePicker","Ionicons","jsx","_jsx","jsxs","_jsxs","selectImage","_useState","_useState2","_slicedToArray","images","setImages","renderInputs","handleImagePick","_ref","_asyncToGenerator","apply","arguments","style","styles","container","children","map","uri","index","source","imagePreview","imagePickerButton","backgroundColor","onPress","name","size","color","imagePickerText","create","flex","justifyContent","alignItems","buttonContainer","padding","width","marginBottom","buttonText","fontWeight","textAlign","imageArea","height","resizeMode"],"sources":["G:/Tehreem/Documents/Flex-Share/Flex-Share/client/src/Component/imagePicker.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, Text, TouchableOpacity, View, Image } from \"react-native\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n\r\nconst selectImage = () => {\r\n  const [images, setImages] = useState([]);\r\n\r\n  const renderInputs = () => {\r\n    // Define your input components here\r\n    // For example:\r\n    // return <TextInput placeholder=\"Enter something\" />;\r\n  };\r\n\r\n  const handleImagePick = async () => {\r\n    // Your image picker logic here\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Render selected images */}\r\n      {images.map((uri, index) => (\r\n        <Image key={uri} source={{ uri }} style={styles.imagePreview} />\r\n      ))}\r\n\r\n      {/* Render input components */}\r\n      {renderInputs()}\r\n\r\n      {/* Image picker button */}\r\n      <TouchableOpacity\r\n        style={[styles.imagePickerButton, { backgroundColor: \"#DABFBF\" }]}\r\n        onPress={handleImagePick}\r\n      >\r\n        <Ionicons name=\"add-circle\" size={24} color=\"black\" />\r\n        <Text style={styles.imagePickerText}>ADD IMAGE</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  buttonContainer: {\r\n    backgroundColor: \"black\",\r\n    padding: 10,\r\n    width: 250,\r\n    marginBottom: 20,\r\n  },\r\n  buttonText: {\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n  },\r\n  imageArea: {\r\n    width: 200, // Set the width to an appropriate value\r\n    height: 200, // Set the height to an appropriate value\r\n    resizeMode: \"cover\", // Adjust the resizeMode property as needed\r\n  },\r\n});\r\n\r\nexport default selectImage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAExC,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAChD,SAASC,QAAQ,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE9C,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EACxB,IAAAC,SAAA,GAA4Bb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EAExB,IAAMI,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS,CAI3B,CAAC;EAED,IAAMC,eAAe;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY,CAEpC,CAAC;IAAA,gBAFKF,eAAeA,CAAA;MAAA,OAAAC,IAAA,CAAAE,KAAA,OAAAC,SAAA;IAAA;EAAA,GAEpB;EAED,OACEZ,KAAA,CAACP,IAAI;IAACoB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAE3BX,MAAM,CAACY,GAAG,CAAC,UAACC,GAAG,EAAEC,KAAK;MAAA,OACrBrB,IAAA,CAACJ,KAAK;QAAW0B,MAAM,EAAE;UAAEF,GAAG,EAAHA;QAAI,CAAE;QAACL,KAAK,EAAEC,MAAM,CAACO;MAAa,GAAjDH,GAAmD,CAAC;IAAA,CACjE,CAAC,EAGDX,YAAY,CAAC,CAAC,EAGfP,KAAA,CAACR,gBAAgB;MACfqB,KAAK,EAAE,CAACC,MAAM,CAACQ,iBAAiB,EAAE;QAAEC,eAAe,EAAE;MAAU,CAAC,CAAE;MAClEC,OAAO,EAAEhB,eAAgB;MAAAQ,QAAA,GAEzBlB,IAAA,CAACF,QAAQ;QAAC6B,IAAI,EAAC,YAAY;QAACC,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC;MAAO,CAAE,CAAC,EACtD7B,IAAA,CAACP,IAAI;QAACsB,KAAK,EAAEC,MAAM,CAACc,eAAgB;QAAAZ,QAAA,EAAC;MAAS,CAAM,CAAC;IAAA,CACrC,CAAC;EAAA,CACf,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGxB,UAAU,CAACuC,MAAM,CAAC;EAC/Bd,SAAS,EAAE;IACTe,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDC,eAAe,EAAE;IACfV,eAAe,EAAE,OAAO;IACxBW,OAAO,EAAE,EAAE;IACXC,KAAK,EAAE,GAAG;IACVC,YAAY,EAAE;EAChB,CAAC;EACDC,UAAU,EAAE;IACVC,UAAU,EAAE,MAAM;IAClBX,KAAK,EAAE,OAAO;IACdY,SAAS,EAAE;EACb,CAAC;EACDC,SAAS,EAAE;IACTL,KAAK,EAAE,GAAG;IACVM,MAAM,EAAE,GAAG;IACXC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAezC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}