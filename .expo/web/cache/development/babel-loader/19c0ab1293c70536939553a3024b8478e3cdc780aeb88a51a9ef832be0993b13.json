{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ImagePickerComponent = function ImagePickerComponent() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    image = _useState2[0],\n    setImage = _useState2[1];\n  var pickImageAsync = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        allowsEditing: true,\n        quality: 1\n      });\n      if (!result.cancelled) {\n        setImage(result.uri);\n      } else {\n        alert(\"You did not select any image.\");\n      }\n    });\n    return function pickImageAsync() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.buttonContainer,\n      onPress: function onPress() {\n        return pickImageAsync();\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Choose Image From Gallery\"\n      })\n    }), image && _jsx(Image, {\n      style: styles.imageArea,\n      source: {\n        uri: image\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  buttonContainer: {\n    backgroundColor: \"black\",\n    padding: 10,\n    width: 250,\n    marginBottom: 20\n  },\n  buttonText: {\n    fontWeight: \"bold\",\n    color: \"white\",\n    textAlign: \"center\"\n  },\n  imageArea: {\n    width: 200,\n    height: 200,\n    resizeMode: \"cover\"\n  }\n});\nexport default ImagePickerComponent;","map":{"version":3,"names":["React","useState","StyleSheet","Text","TouchableOpacity","View","Image","ImagePicker","jsx","_jsx","jsxs","_jsxs","ImagePickerComponent","_useState","_useState2","_slicedToArray","image","setImage","pickImageAsync","_ref","_asyncToGenerator","result","launchImageLibraryAsync","allowsEditing","quality","cancelled","uri","alert","apply","arguments","style","styles","container","children","buttonContainer","onPress","buttonText","imageArea","source","create","flex","justifyContent","alignItems","backgroundColor","padding","width","marginBottom","fontWeight","color","textAlign","height","resizeMode"],"sources":["G:/Tehreem/Documents/Flex-Share/Flex-Share/client/src/Component/imagePicker.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, Text, TouchableOpacity, View, Image } from \"react-native\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\n\r\nconst ImagePickerComponent = () => {\r\n  const [image, setImage] = useState(null);\r\n\r\n  const pickImageAsync = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      allowsEditing: true,\r\n      quality: 1,\r\n    });\r\n\r\n    if (!result.cancelled) {\r\n      setImage(result.uri);\r\n    } else {\r\n      alert(\"You did not select any image.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity\r\n        style={styles.buttonContainer}\r\n        onPress={() => pickImageAsync()}\r\n      >\r\n        <Text style={styles.buttonText}>Choose Image From Gallery</Text>\r\n      </TouchableOpacity>\r\n\r\n      {image && <Image style={styles.imageArea} source={{ uri: image }} />}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  buttonContainer: {\r\n    backgroundColor: \"black\",\r\n    padding: 10,\r\n    width: 250,\r\n    marginBottom: 20,\r\n  },\r\n  buttonText: {\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n  },\r\n  imageArea: {\r\n    width: 200, // Set the width to an appropriate value\r\n    height: 200, // Set the height to an appropriate value\r\n    resizeMode: \"cover\", // Adjust the resizeMode property as needed\r\n  },\r\n});\r\n\r\nexport default ImagePickerComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAExC,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjD,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAS;EACjC,IAAAC,SAAA,GAA0BZ,QAAQ,CAAC,IAAI,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjCG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAEtB,IAAMI,cAAc;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MACjC,IAAIC,MAAM,SAASd,WAAW,CAACe,uBAAuB,CAAC;QACrDC,aAAa,EAAE,IAAI;QACnBC,OAAO,EAAE;MACX,CAAC,CAAC;MAEF,IAAI,CAACH,MAAM,CAACI,SAAS,EAAE;QACrBR,QAAQ,CAACI,MAAM,CAACK,GAAG,CAAC;MACtB,CAAC,MAAM;QACLC,KAAK,CAAC,+BAA+B,CAAC;MACxC;IACF,CAAC;IAAA,gBAXKT,cAAcA,CAAA;MAAA,OAAAC,IAAA,CAAAS,KAAA,OAAAC,SAAA;IAAA;EAAA,GAWnB;EAED,OACElB,KAAA,CAACN,IAAI;IAACyB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BxB,IAAA,CAACL,gBAAgB;MACf0B,KAAK,EAAEC,MAAM,CAACG,eAAgB;MAC9BC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMjB,cAAc,CAAC,CAAC;MAAA,CAAC;MAAAe,QAAA,EAEhCxB,IAAA,CAACN,IAAI;QAAC2B,KAAK,EAAEC,MAAM,CAACK,UAAW;QAAAH,QAAA,EAAC;MAAyB,CAAM;IAAC,CAChD,CAAC,EAElBjB,KAAK,IAAIP,IAAA,CAACH,KAAK;MAACwB,KAAK,EAAEC,MAAM,CAACM,SAAU;MAACC,MAAM,EAAE;QAAEZ,GAAG,EAAEV;MAAM;IAAE,CAAE,CAAC;EAAA,CAChE,CAAC;AAEX,CAAC;AAED,IAAMe,MAAM,GAAG7B,UAAU,CAACqC,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDR,eAAe,EAAE;IACfS,eAAe,EAAE,OAAO;IACxBC,OAAO,EAAE,EAAE;IACXC,KAAK,EAAE,GAAG;IACVC,YAAY,EAAE;EAChB,CAAC;EACDV,UAAU,EAAE;IACVW,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE,OAAO;IACdC,SAAS,EAAE;EACb,CAAC;EACDZ,SAAS,EAAE;IACTQ,KAAK,EAAE,GAAG;IACVK,MAAM,EAAE,GAAG;IACXC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAevC,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}