{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport DropdownComponent from \"../DropdownComponent\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SellerButtons = function SellerButtons(_ref) {\n  var imageSource = _ref.imageSource,\n    placeholder = _ref.placeholder;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isDropdownVisible = _useState2[0],\n    setIsDropdownVisible = _useState2[1];\n  var toggleDropdown = function toggleDropdown() {\n    setIsDropdownVisible(!isDropdownVisible);\n  };\n  return _jsxs(TouchableOpacity, {\n    onPress: toggleDropdown,\n    style: styles.btnContainer,\n    children: [_jsx(View, {\n      style: styles.searchbuttonStyle,\n      children: _jsxs(View, {\n        style: styles.buttonContent,\n        children: [_jsx(View, {\n          style: styles.circle\n        }), _jsx(Image, {\n          source: imageSource,\n          style: styles.btnImageStyle,\n          resizeMode: \"contain\"\n        }), _jsx(Text, {\n          style: styles.textStyle,\n          children: placeholder\n        })]\n      })\n    }), _jsx(DropdownComponent, {\n      visible: isDropdownVisible,\n      data: [\"Option 1\", \"Option 2\", \"Option 3\"],\n      onSelect: function onSelect(item) {\n        console.log(\"Selected option:\", item);\n      },\n      onClose: toggleDropdown\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  btnContainer: {\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  textStyle: {\n    paddingHorizontal: 35,\n    fontSize: 15,\n    color: \"black\",\n    fontWeight: \"bold\"\n  },\n  searchbuttonStyle: {\n    backgroundColor: \"#FFFFFF\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    gap: 5,\n    alignItems: \"center\",\n    borderRadius: 26,\n    width: 342,\n    height: 81\n  },\n  buttonContent: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    flex: 1\n  },\n  circle: {\n    width: 70,\n    height: 70,\n    borderRadius: 35,\n    backgroundColor: \"#2F2E41\",\n    position: \"absolute\",\n    top: -10,\n    left: 10\n  },\n  btnImageStyle: {\n    width: 60,\n    height: 50,\n    left: 10,\n    bottom: 0\n  },\n  iconContainer: {\n    flexDirection: \"row\",\n    marginLeft: 10,\n    marginRight: 10,\n    alignItems: \"center\"\n  },\n  icon: {\n    marginLeft: 10\n  }\n});\nexport default SellerButtons;","map":{"version":3,"names":["React","useState","StyleSheet","View","Image","Text","TouchableOpacity","DropdownComponent","jsx","_jsx","jsxs","_jsxs","SellerButtons","_ref","imageSource","placeholder","_useState","_useState2","_slicedToArray","isDropdownVisible","setIsDropdownVisible","toggleDropdown","onPress","style","styles","btnContainer","children","searchbuttonStyle","buttonContent","circle","source","btnImageStyle","resizeMode","textStyle","visible","data","onSelect","item","console","log","onClose","create","alignItems","marginTop","paddingHorizontal","fontSize","color","fontWeight","backgroundColor","display","flexDirection","gap","borderRadius","width","height","flex","position","top","left","bottom","iconContainer","marginLeft","marginRight","icon"],"sources":["G:/Tehreem/Documents/Flex-Share/Flex-Share/client/src/Component/Home/SellerButtons.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, View, Image, Text, TouchableOpacity } from \"react-native\";\r\nimport DropdownComponent from \"../DropdownComponent\"; // Assuming the DropdownComponent file is in the same directory\r\n\r\nconst SellerButtons = ({ imageSource, placeholder }) => {\r\n  const [isDropdownVisible, setIsDropdownVisible] = useState(false);\r\n\r\n  const toggleDropdown = () => {\r\n    setIsDropdownVisible(!isDropdownVisible);\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity onPress={toggleDropdown} style={styles.btnContainer}>\r\n      <View style={styles.searchbuttonStyle}>\r\n        <View style={styles.buttonContent}>\r\n          <View style={styles.circle}></View>\r\n          <Image\r\n            source={imageSource}\r\n            style={styles.btnImageStyle}\r\n            resizeMode=\"contain\"\r\n          />\r\n          <Text style={styles.textStyle}>{placeholder}</Text>\r\n        </View>\r\n      </View>\r\n      <DropdownComponent\r\n        visible={isDropdownVisible}\r\n        data={[\"Option 1\", \"Option 2\", \"Option 3\"]} // Pass your dropdown options here\r\n        onSelect={(item) => {\r\n          console.log(\"Selected option:\", item);\r\n          // Handle selected option here\r\n        }}\r\n        onClose={toggleDropdown}\r\n      />\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  btnContainer: {\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n  },\r\n  textStyle: {\r\n    paddingHorizontal: 35,\r\n    fontSize: 15,\r\n    color: \"black\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  searchbuttonStyle: {\r\n    backgroundColor: \"#FFFFFF\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    gap: 5,\r\n    alignItems: \"center\",\r\n    borderRadius: 26,\r\n    width: 342,\r\n    height: 81,\r\n  },\r\n  buttonContent: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    flex: 1,\r\n  },\r\n  circle: {\r\n    width: 70,\r\n    height: 70,\r\n    borderRadius: 35,\r\n    backgroundColor: \"#2F2E41\",\r\n    position: \"absolute\",\r\n    top: -10,\r\n    left: 10,\r\n  },\r\n  btnImageStyle: {\r\n    width: 60,\r\n    height: 50,\r\n    left: 10,\r\n    bottom: 0,\r\n  },\r\n  iconContainer: {\r\n    flexDirection: \"row\",\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n    alignItems: \"center\",\r\n  },\r\n  icon: {\r\n    marginLeft: 10,\r\n  },\r\n});\r\n\r\nexport default SellerButtons;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAExC,OAAOC,iBAAiB;AAA6B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErD,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAAqC;EAAA,IAA/BC,WAAW,GAAAD,IAAA,CAAXC,WAAW;IAAEC,WAAW,GAAAF,IAAA,CAAXE,WAAW;EAC/C,IAAAC,SAAA,GAAkDf,QAAQ,CAAC,KAAK,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1DG,iBAAiB,GAAAF,UAAA;IAAEG,oBAAoB,GAAAH,UAAA;EAE9C,IAAMI,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAC3BD,oBAAoB,CAAC,CAACD,iBAAiB,CAAC;EAC1C,CAAC;EAED,OACER,KAAA,CAACL,gBAAgB;IAACgB,OAAO,EAAED,cAAe;IAACE,KAAK,EAAEC,MAAM,CAACC,YAAa;IAAAC,QAAA,GACpEjB,IAAA,CAACN,IAAI;MAACoB,KAAK,EAAEC,MAAM,CAACG,iBAAkB;MAAAD,QAAA,EACpCf,KAAA,CAACR,IAAI;QAACoB,KAAK,EAAEC,MAAM,CAACI,aAAc;QAAAF,QAAA,GAChCjB,IAAA,CAACN,IAAI;UAACoB,KAAK,EAAEC,MAAM,CAACK;QAAO,CAAO,CAAC,EACnCpB,IAAA,CAACL,KAAK;UACJ0B,MAAM,EAAEhB,WAAY;UACpBS,KAAK,EAAEC,MAAM,CAACO,aAAc;UAC5BC,UAAU,EAAC;QAAS,CACrB,CAAC,EACFvB,IAAA,CAACJ,IAAI;UAACkB,KAAK,EAAEC,MAAM,CAACS,SAAU;UAAAP,QAAA,EAAEX;QAAW,CAAO,CAAC;MAAA,CAC/C;IAAC,CACH,CAAC,EACPN,IAAA,CAACF,iBAAiB;MAChB2B,OAAO,EAAEf,iBAAkB;MAC3BgB,IAAI,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAE;MAC3CC,QAAQ,EAAE,SAAAA,SAACC,IAAI,EAAK;QAClBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,IAAI,CAAC;MAEvC,CAAE;MACFG,OAAO,EAAEnB;IAAe,CACzB,CAAC;EAAA,CACc,CAAC;AAEvB,CAAC;AAED,IAAMG,MAAM,GAAGtB,UAAU,CAACuC,MAAM,CAAC;EAC/BhB,YAAY,EAAE;IACZiB,UAAU,EAAE,QAAQ;IACpBC,SAAS,EAAE;EACb,CAAC;EACDV,SAAS,EAAE;IACTW,iBAAiB,EAAE,EAAE;IACrBC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,OAAO;IACdC,UAAU,EAAE;EACd,CAAC;EACDpB,iBAAiB,EAAE;IACjBqB,eAAe,EAAE,SAAS;IAC1BC,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,KAAK;IACpBC,GAAG,EAAE,CAAC;IACNT,UAAU,EAAE,QAAQ;IACpBU,YAAY,EAAE,EAAE;IAChBC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE;EACV,CAAC;EACD1B,aAAa,EAAE;IACbsB,aAAa,EAAE,KAAK;IACpBR,UAAU,EAAE,QAAQ;IACpBa,IAAI,EAAE;EACR,CAAC;EACD1B,MAAM,EAAE;IACNwB,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVF,YAAY,EAAE,EAAE;IAChBJ,eAAe,EAAE,SAAS;IAC1BQ,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,CAAC,EAAE;IACRC,IAAI,EAAE;EACR,CAAC;EACD3B,aAAa,EAAE;IACbsB,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVI,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE;EACV,CAAC;EACDC,aAAa,EAAE;IACbV,aAAa,EAAE,KAAK;IACpBW,UAAU,EAAE,EAAE;IACdC,WAAW,EAAE,EAAE;IACfpB,UAAU,EAAE;EACd,CAAC;EACDqB,IAAI,EAAE;IACJF,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAejD,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}