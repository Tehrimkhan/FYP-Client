{"ast":null,"code":"import React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SellerButtons = function SellerButtons(_ref) {\n  var imageSource = _ref.imageSource,\n    placeholder = _ref.placeholder;\n  return _jsx(View, {\n    children: _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return setModalVisible(true);\n      },\n      children: _jsx(View, {\n        style: styles.searchbuttonStyle,\n        children: _jsxs(View, {\n          style: styles.buttonContent,\n          children: [_jsx(View, {\n            style: styles.circle\n          }), _jsx(Image, {\n            source: imageSource,\n            style: styles.btnImageStyle,\n            resizeMode: \"contain\"\n          }), _jsx(Text, {\n            style: styles.textStyle,\n            children: placeholder\n          })]\n        })\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  textStyle: {\n    paddingHorizontal: 35,\n    fontSize: 15,\n    color: \"black\",\n    fontWeight: \"bold\"\n  },\n  searchbuttonStyle: {\n    backgroundColor: \"#FFFFFF\",\n    flexDirection: \"row\",\n    gap: 5,\n    alignItems: \"center\",\n    borderRadius: 26,\n    width: 342,\n    height: 81,\n    marginTop: 40,\n    marginLeft: 20\n  },\n  buttonContent: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    flex: 1\n  },\n  circle: {\n    width: 70,\n    height: 70,\n    borderRadius: 35,\n    backgroundColor: \"#2F2E41\",\n    position: \"absolute\",\n    top: -10,\n    left: 10\n  },\n  btnImageStyle: {\n    width: 60,\n    height: 50,\n    left: 10,\n    bottom: 0\n  }\n});\nexport default SellerButtons;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","StyleSheet","Image","jsx","_jsx","jsxs","_jsxs","SellerButtons","_ref","imageSource","placeholder","children","onPress","setModalVisible","style","styles","searchbuttonStyle","buttonContent","circle","source","btnImageStyle","resizeMode","textStyle","create","paddingHorizontal","fontSize","color","fontWeight","backgroundColor","flexDirection","gap","alignItems","borderRadius","width","height","marginTop","marginLeft","flex","position","top","left","bottom"],"sources":["G:/Tehreem/Documents/Flex-Share/Flex-Share/client/src/Component/Home/SellerButtons.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, TouchableOpacity, StyleSheet, Image } from \"react-native\";\r\n\r\nconst SellerButtons = ({ imageSource, placeholder }) => {\r\n  return (\r\n    <View>\r\n      <TouchableOpacity onPress={() => setModalVisible(true)}>\r\n        <View style={styles.searchbuttonStyle}>\r\n          <View style={styles.buttonContent}>\r\n            <View style={styles.circle}></View>\r\n            <Image\r\n              source={imageSource}\r\n              style={styles.btnImageStyle}\r\n              resizeMode=\"contain\"\r\n            />\r\n            <Text style={styles.textStyle}>{placeholder}</Text>\r\n          </View>\r\n        </View>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  textStyle: {\r\n    paddingHorizontal: 35,\r\n    fontSize: 15,\r\n    color: \"black\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  searchbuttonStyle: {\r\n    backgroundColor: \"#FFFFFF\",\r\n    flexDirection: \"row\",\r\n    gap: 5,\r\n    alignItems: \"center\",\r\n    borderRadius: 26,\r\n    width: 342,\r\n    height: 81,\r\n    marginTop: 40,\r\n    marginLeft: 20,\r\n  },\r\n  buttonContent: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    flex: 1,\r\n  },\r\n  circle: {\r\n    width: 70,\r\n    height: 70,\r\n    borderRadius: 35,\r\n    backgroundColor: \"#2F2E41\",\r\n    position: \"absolute\",\r\n    top: -10,\r\n    left: 10,\r\n  },\r\n  btnImageStyle: {\r\n    width: 60,\r\n    height: 50,\r\n    left: 10,\r\n    bottom: 0,\r\n  },\r\n});\r\n\r\nexport default SellerButtons;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxC,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAAqC;EAAA,IAA/BC,WAAW,GAAAD,IAAA,CAAXC,WAAW;IAAEC,WAAW,GAAAF,IAAA,CAAXE,WAAW;EAC/C,OACEN,IAAA,CAACN,IAAI;IAAAa,QAAA,EACHP,IAAA,CAACJ,gBAAgB;MAACY,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMC,eAAe,CAAC,IAAI,CAAC;MAAA,CAAC;MAAAF,QAAA,EACrDP,IAAA,CAACN,IAAI;QAACgB,KAAK,EAAEC,MAAM,CAACC,iBAAkB;QAAAL,QAAA,EACpCL,KAAA,CAACR,IAAI;UAACgB,KAAK,EAAEC,MAAM,CAACE,aAAc;UAAAN,QAAA,GAChCP,IAAA,CAACN,IAAI;YAACgB,KAAK,EAAEC,MAAM,CAACG;UAAO,CAAO,CAAC,EACnCd,IAAA,CAACF,KAAK;YACJiB,MAAM,EAAEV,WAAY;YACpBK,KAAK,EAAEC,MAAM,CAACK,aAAc;YAC5BC,UAAU,EAAC;UAAS,CACrB,CAAC,EACFjB,IAAA,CAACL,IAAI;YAACe,KAAK,EAAEC,MAAM,CAACO,SAAU;YAAAX,QAAA,EAAED;UAAW,CAAO,CAAC;QAAA,CAC/C;MAAC,CACH;IAAC,CACS;EAAC,CACf,CAAC;AAEX,CAAC;AACD,IAAMK,MAAM,GAAGd,UAAU,CAACsB,MAAM,CAAC;EAC/BD,SAAS,EAAE;IACTE,iBAAiB,EAAE,EAAE;IACrBC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,OAAO;IACdC,UAAU,EAAE;EACd,CAAC;EACDX,iBAAiB,EAAE;IACjBY,eAAe,EAAE,SAAS;IAC1BC,aAAa,EAAE,KAAK;IACpBC,GAAG,EAAE,CAAC;IACNC,UAAU,EAAE,QAAQ;IACpBC,YAAY,EAAE,EAAE;IAChBC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,EAAE;IACVC,SAAS,EAAE,EAAE;IACbC,UAAU,EAAE;EACd,CAAC;EACDnB,aAAa,EAAE;IACbY,aAAa,EAAE,KAAK;IACpBE,UAAU,EAAE,QAAQ;IACpBM,IAAI,EAAE;EACR,CAAC;EACDnB,MAAM,EAAE;IACNe,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVF,YAAY,EAAE,EAAE;IAChBJ,eAAe,EAAE,SAAS;IAC1BU,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,CAAC,EAAE;IACRC,IAAI,EAAE;EACR,CAAC;EACDpB,aAAa,EAAE;IACba,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVM,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE;EACV;AACF,CAAC,CAAC;AAEF,eAAelC,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}