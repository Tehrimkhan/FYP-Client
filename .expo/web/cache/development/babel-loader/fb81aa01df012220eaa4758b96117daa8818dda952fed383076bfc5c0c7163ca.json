{"ast":null,"code":"import React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SellerButtons = function SellerButtons(_ref) {\n  var imageSource = _ref.imageSource,\n    placeholder = _ref.placeholder,\n    onPress = _ref.onPress;\n  return _jsxs(View, {\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return setModalVisible(true);\n      },\n      children: _jsx(Text, {\n        children: placeholder\n      })\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        setModalVisible(!modalVisible);\n      },\n      children: _jsx(View, {\n        style: styles.modalContainer,\n        children: _jsxs(View, {\n          style: styles.modalContent,\n          children: [_jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Name\",\n            onChangeText: function onChangeText(text) {\n              return setName(text);\n            }\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Age\",\n            keyboardType: \"numeric\",\n            onChangeText: function onChangeText(text) {\n              return setAge(text);\n            }\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Phone\",\n            keyboardType: \"phone-pad\",\n            onChangeText: function onChangeText(text) {\n              return setPhone(text);\n            }\n          }), _jsx(TouchableOpacity, {\n            style: styles.saveButton,\n            onPress: handleSave,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Save\"\n            })\n          })]\n        })\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  btnContainer: {\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  textStyle: {\n    paddingHorizontal: 35,\n    fontSize: 15,\n    color: \"black\",\n    fontWeight: \"bold\"\n  },\n  searchbuttonStyle: {\n    backgroundColor: \"#FFFFFF\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    gap: 5,\n    alignItems: \"center\",\n    borderRadius: 26,\n    width: 342,\n    height: 81\n  },\n  buttonContent: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    flex: 1\n  },\n  circle: {\n    width: 70,\n    height: 70,\n    borderRadius: 35,\n    backgroundColor: \"#2F2E41\",\n    position: \"absolute\",\n    top: -10,\n    left: 10\n  },\n  btnImageStyle: {\n    width: 60,\n    height: 50,\n    left: 10,\n    bottom: 0\n  },\n  iconContainer: {\n    flexDirection: \"row\",\n    marginLeft: 10,\n    marginRight: 10,\n    alignItems: \"center\"\n  },\n  icon: {\n    marginLeft: 10\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\"\n  },\n  modalContent: {\n    backgroundColor: \"#fff\",\n    padding: 20,\n    borderRadius: 10,\n    width: 300\n  },\n  input: {\n    height: 40,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    marginVertical: 10,\n    paddingHorizontal: 10\n  },\n  saveButton: {\n    backgroundColor: \"#4CAF50\",\n    borderRadius: 5,\n    padding: 10,\n    alignItems: \"center\"\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontWeight: \"bold\"\n  }\n});\nexport default SellerButtons;","map":{"version":3,"names":["React","StyleSheet","View","Image","Text","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","SellerButtons","_ref","imageSource","placeholder","onPress","children","setModalVisible","Modal","animationType","transparent","visible","modalVisible","onRequestClose","style","styles","modalContainer","modalContent","TextInput","input","onChangeText","text","setName","keyboardType","setAge","setPhone","saveButton","handleSave","buttonText","create","btnContainer","alignItems","marginTop","textStyle","paddingHorizontal","fontSize","color","fontWeight","searchbuttonStyle","backgroundColor","display","flexDirection","gap","borderRadius","width","height","buttonContent","flex","circle","position","top","left","btnImageStyle","bottom","iconContainer","marginLeft","marginRight","icon","justifyContent","padding","borderColor","borderWidth","marginVertical"],"sources":["G:/Tehreem/Documents/Flex-Share/Flex-Share/client/src/Component/Home/SellerButtons.js"],"sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, View, Image, Text, TouchableOpacity } from \"react-native\";\r\n\r\nconst SellerButtons = ({ imageSource, placeholder, onPress }) => {\r\n  return (\r\n    <View>\r\n      <TouchableOpacity onPress={() => setModalVisible(true)}>\r\n        {/* Your button content */}\r\n        {/* For example, you can display an image and a placeholder */}\r\n        <Text>{placeholder}</Text>\r\n      </TouchableOpacity>\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => {\r\n          setModalVisible(!modalVisible);\r\n        }}\r\n      >\r\n        <View style={styles.modalContainer}>\r\n          <View style={styles.modalContent}>\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Name\"\r\n              onChangeText={(text) => setName(text)}\r\n            />\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Age\"\r\n              keyboardType=\"numeric\"\r\n              onChangeText={(text) => setAge(text)}\r\n            />\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Phone\"\r\n              keyboardType=\"phone-pad\"\r\n              onChangeText={(text) => setPhone(text)}\r\n            />\r\n            <TouchableOpacity style={styles.saveButton} onPress={handleSave}>\r\n              <Text style={styles.buttonText}>Save</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  btnContainer: {\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n  },\r\n  textStyle: {\r\n    paddingHorizontal: 35,\r\n    fontSize: 15,\r\n    color: \"black\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  searchbuttonStyle: {\r\n    backgroundColor: \"#FFFFFF\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    gap: 5,\r\n    alignItems: \"center\",\r\n    borderRadius: 26,\r\n    width: 342,\r\n    height: 81,\r\n  },\r\n  buttonContent: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    flex: 1,\r\n  },\r\n  circle: {\r\n    width: 70,\r\n    height: 70,\r\n    borderRadius: 35,\r\n    backgroundColor: \"#2F2E41\",\r\n    position: \"absolute\",\r\n    top: -10,\r\n    left: 10,\r\n  },\r\n  btnImageStyle: {\r\n    width: 60,\r\n    height: 50,\r\n    left: 10,\r\n    bottom: 0,\r\n  },\r\n  iconContainer: {\r\n    flexDirection: \"row\",\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n    alignItems: \"center\",\r\n  },\r\n  icon: {\r\n    marginLeft: 10,\r\n  },\r\n  modalContainer: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n  },\r\n  modalContent: {\r\n    backgroundColor: \"#fff\",\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    width: 300,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderColor: \"gray\",\r\n    borderWidth: 1,\r\n    marginVertical: 10,\r\n    paddingHorizontal: 10,\r\n  },\r\n  saveButton: {\r\n    backgroundColor: \"#4CAF50\",\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    alignItems: \"center\",\r\n  },\r\n  buttonText: {\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nexport default SellerButtons;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}